(define (domain blocks)
(:requirements :typing )
(:types agent block - object )
(:predicates (on ?x - block ?y - block )(ontable ?x - block )(clear ?x - block )(holding ?agent - agent ?x - block )(handempty ?agent - agent ))
(:action stack&stack
:parameters (?a1 - agent ?x1 - block ?y1 - block ?a2 - agent ?x2 - block ?y2 - block)
:precondition (and
(holding ?a1 ?x1 )
(clear ?y1 )
(holding ?a2 ?x2 )
(clear ?y2 )
)
:effect (and
(not (holding ?a1 ?x1 ))
(not (clear ?y1 ))
(clear ?x1 )
(handempty ?a1 )
(on ?x1 ?y1 )
(not (holding ?a2 ?x2 ))
(not (clear ?y2 ))
(clear ?x2 )
(handempty ?a2 )
(on ?x2 ?y2 )
)
)
(:action stack&pick-up
:parameters (?a1 - agent ?x1 - block ?y1 - block ?a2 - agent ?x2 - block)
:precondition (and
(holding ?a1 ?x1 )
(clear ?y1 )
(clear ?x2 )
(ontable ?x2 )
(handempty ?a2 )
)
:effect (and
(not (holding ?a1 ?x1 ))
(not (clear ?y1 ))
(clear ?x1 )
(handempty ?a1 )
(on ?x1 ?y1 )
(not (ontable ?x2 ))
(not (clear ?x2 ))
(not (handempty ?a2 ))
(holding ?a2 ?x2 )
)
)
(:action stack&put-down
:parameters (?a1 - agent ?x1 - block ?y1 - block ?a2 - agent ?x2 - block)
:precondition (and
(holding ?a1 ?x1 )
(clear ?y1 )
(holding ?a2 ?x2 )
)
:effect (and
(not (holding ?a1 ?x1 ))
(not (clear ?y1 ))
(clear ?x1 )
(handempty ?a1 )
(on ?x1 ?y1 )
(not (holding ?a2 ?x2 ))
(clear ?x2 )
(handempty ?a2 )
(ontable ?x2 )
)
)
(:action stack&unstack
:parameters (?a1 - agent ?x1 - block ?y1 - block ?a2 - agent ?x2 - block ?y2 - block)
:precondition (and
(holding ?a1 ?x1 )
(clear ?y1 )
(on ?x2 ?y2 )
(clear ?x2 )
(handempty ?a2 )
)
:effect (and
(not (holding ?a1 ?x1 ))
(not (clear ?y1 ))
(clear ?x1 )
(handempty ?a1 )
(on ?x1 ?y1 )
(holding ?a2 ?x2 )
(clear ?y2 )
(not (clear ?x2 ))
(not (handempty ?a2 ))
(not (on ?x2 ?y2 ))
)
)
(:action pick-up&stack
:parameters (?a1 - agent ?x1 - block ?a2 - agent ?x2 - block ?y2 - block)
:precondition (and
(clear ?x1 )
(ontable ?x1 )
(handempty ?a1 )
(holding ?a2 ?x2 )
(clear ?y2 )
)
:effect (and
(not (ontable ?x1 ))
(not (clear ?x1 ))
(not (handempty ?a1 ))
(holding ?a1 ?x1 )
(not (holding ?a2 ?x2 ))
(not (clear ?y2 ))
(clear ?x2 )
(handempty ?a2 )
(on ?x2 ?y2 )
)
)
(:action pick-up&pick-up
:parameters (?a1 - agent ?x1 - block ?a2 - agent ?x2 - block)
:precondition (and
(clear ?x1 )
(ontable ?x1 )
(handempty ?a1 )
(clear ?x2 )
(ontable ?x2 )
(handempty ?a2 )
)
:effect (and
(not (ontable ?x1 ))
(not (clear ?x1 ))
(not (handempty ?a1 ))
(holding ?a1 ?x1 )
(not (ontable ?x2 ))
(not (clear ?x2 ))
(not (handempty ?a2 ))
(holding ?a2 ?x2 )
)
)
(:action pick-up&put-down
:parameters (?a1 - agent ?x1 - block ?a2 - agent ?x2 - block)
:precondition (and
(clear ?x1 )
(ontable ?x1 )
(handempty ?a1 )
(holding ?a2 ?x2 )
)
:effect (and
(not (ontable ?x1 ))
(not (clear ?x1 ))
(not (handempty ?a1 ))
(holding ?a1 ?x1 )
(not (holding ?a2 ?x2 ))
(clear ?x2 )
(handempty ?a2 )
(ontable ?x2 )
)
)
(:action pick-up&unstack
:parameters (?a1 - agent ?x1 - block ?a2 - agent ?x2 - block ?y2 - block)
:precondition (and
(clear ?x1 )
(ontable ?x1 )
(handempty ?a1 )
(on ?x2 ?y2 )
(clear ?x2 )
(handempty ?a2 )
)
:effect (and
(not (ontable ?x1 ))
(not (clear ?x1 ))
(not (handempty ?a1 ))
(holding ?a1 ?x1 )
(holding ?a2 ?x2 )
(clear ?y2 )
(not (clear ?x2 ))
(not (handempty ?a2 ))
(not (on ?x2 ?y2 ))
)
)
(:action put-down&stack
:parameters (?a1 - agent ?x1 - block ?a2 - agent ?x2 - block ?y2 - block)
:precondition (and
(holding ?a1 ?x1 )
(holding ?a2 ?x2 )
(clear ?y2 )
)
:effect (and
(not (holding ?a1 ?x1 ))
(clear ?x1 )
(handempty ?a1 )
(ontable ?x1 )
(not (holding ?a2 ?x2 ))
(not (clear ?y2 ))
(clear ?x2 )
(handempty ?a2 )
(on ?x2 ?y2 )
)
)
(:action put-down&pick-up
:parameters (?a1 - agent ?x1 - block ?a2 - agent ?x2 - block)
:precondition (and
(holding ?a1 ?x1 )
(clear ?x2 )
(ontable ?x2 )
(handempty ?a2 )
)
:effect (and
(not (holding ?a1 ?x1 ))
(clear ?x1 )
(handempty ?a1 )
(ontable ?x1 )
(not (ontable ?x2 ))
(not (clear ?x2 ))
(not (handempty ?a2 ))
(holding ?a2 ?x2 )
)
)
(:action put-down&put-down
:parameters (?a1 - agent ?x1 - block ?a2 - agent ?x2 - block)
:precondition (and
(holding ?a1 ?x1 )
(holding ?a2 ?x2 )
)
:effect (and
(not (holding ?a1 ?x1 ))
(clear ?x1 )
(handempty ?a1 )
(ontable ?x1 )
(not (holding ?a2 ?x2 ))
(clear ?x2 )
(handempty ?a2 )
(ontable ?x2 )
)
)
(:action put-down&unstack
:parameters (?a1 - agent ?x1 - block ?a2 - agent ?x2 - block ?y2 - block)
:precondition (and
(holding ?a1 ?x1 )
(on ?x2 ?y2 )
(clear ?x2 )
(handempty ?a2 )
)
:effect (and
(not (holding ?a1 ?x1 ))
(clear ?x1 )
(handempty ?a1 )
(ontable ?x1 )
(holding ?a2 ?x2 )
(clear ?y2 )
(not (clear ?x2 ))
(not (handempty ?a2 ))
(not (on ?x2 ?y2 ))
)
)
(:action unstack&stack
:parameters (?a1 - agent ?x1 - block ?y1 - block ?a2 - agent ?x2 - block ?y2 - block)
:precondition (and
(on ?x1 ?y1 )
(clear ?x1 )
(handempty ?a1 )
(holding ?a2 ?x2 )
(clear ?y2 )
)
:effect (and
(holding ?a1 ?x1 )
(clear ?y1 )
(not (clear ?x1 ))
(not (handempty ?a1 ))
(not (on ?x1 ?y1 ))
(not (holding ?a2 ?x2 ))
(not (clear ?y2 ))
(clear ?x2 )
(handempty ?a2 )
(on ?x2 ?y2 )
)
)
(:action unstack&pick-up
:parameters (?a1 - agent ?x1 - block ?y1 - block ?a2 - agent ?x2 - block)
:precondition (and
(on ?x1 ?y1 )
(clear ?x1 )
(handempty ?a1 )
(clear ?x2 )
(ontable ?x2 )
(handempty ?a2 )
)
:effect (and
(holding ?a1 ?x1 )
(clear ?y1 )
(not (clear ?x1 ))
(not (handempty ?a1 ))
(not (on ?x1 ?y1 ))
(not (ontable ?x2 ))
(not (clear ?x2 ))
(not (handempty ?a2 ))
(holding ?a2 ?x2 )
)
)
(:action unstack&put-down
:parameters (?a1 - agent ?x1 - block ?y1 - block ?a2 - agent ?x2 - block)
:precondition (and
(on ?x1 ?y1 )
(clear ?x1 )
(handempty ?a1 )
(holding ?a2 ?x2 )
)
:effect (and
(holding ?a1 ?x1 )
(clear ?y1 )
(not (clear ?x1 ))
(not (handempty ?a1 ))
(not (on ?x1 ?y1 ))
(not (holding ?a2 ?x2 ))
(clear ?x2 )
(handempty ?a2 )
(ontable ?x2 )
)
)
(:action unstack&unstack
:parameters (?a1 - agent ?x1 - block ?y1 - block ?a2 - agent ?x2 - block ?y2 - block)
:precondition (and
(on ?x1 ?y1 )
(clear ?x1 )
(handempty ?a1 )
(on ?x2 ?y2 )
(clear ?x2 )
(handempty ?a2 )
)
:effect (and
(holding ?a1 ?x1 )
(clear ?y1 )
(not (clear ?x1 ))
(not (handempty ?a1 ))
(not (on ?x1 ?y1 ))
(holding ?a2 ?x2 )
(clear ?y2 )
(not (clear ?x2 ))
(not (handempty ?a2 ))
(not (on ?x2 ?y2 ))
)
)
)
