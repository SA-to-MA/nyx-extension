(define (problem ma-car-problem) (:domain ma-car)
(:init
    (running_car1)
    (running_car2)
    (not (engineblown_car1))
    (not (engineblown_car2))
    (not (goal_reached_car1))
    (not (goal_reached_car2))
    (>= (up_limit_car1) 10)
    (>= (up_limit_car2) 10)
    (<= (down_limit_car1) 0)
    (<= (down_limit_car2) 0)
    (= (v_car1) 0)
    (= (v_car2) 0)
    (= (a_car1) 0)
    (= (a_car2) 0)
    (= (d_car1) 0)
    (= (d_car2) 0)
    (= (running_time_car1) 0)
    (= (running_time_car2) 0)
  )
(:goal
  (and
    (goal_reached_car1)
    (goal_reached_car2)
  )
)
)
