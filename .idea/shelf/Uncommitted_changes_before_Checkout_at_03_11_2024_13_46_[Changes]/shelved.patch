Index: car_visualization.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pygame\r\nimport sys\r\nimport time\r\n\r\n# Initialize Pygame\r\npygame.init()\r\n\r\n# Set up the display with a wider window\r\nwidth, height = 1400, 400  # Increased width to 1600\r\nwindow = pygame.display.set_mode((width, height))\r\npygame.display.set_caption(\"Car Simulation with Velocity Graph\")\r\n\r\n# Define constants for colors\r\nWHITE = (255, 255, 255)\r\nBLACK = (0, 0, 0)\r\nGRAY = (50, 50, 50)\r\nYELLOW = (255, 255, 0)\r\nBLUE = (0, 0, 255)\r\n\r\n# Load car image and set size\r\ncar_image = pygame.image.load('ex/car/resources/i20_Modelpc.png')\r\ncar_image = pygame.transform.scale(car_image, (120, 50))\r\ncar_width, car_height = car_image.get_size()\r\n\r\n# Car starting position and parameters\r\ncar_x = 50\r\ncar_y = height // 2 - car_height // 2\r\nvelocity = 0\r\nacceleration = 0\r\ndistance = 0\r\n\r\n# Time settings\r\nclock = pygame.time.Clock()\r\n\r\n# Read actions from file\r\ndef read_actions_from_file(file_path):\r\n    '''\r\n    :param file_path: path of file that stores the execution plan\r\n    :return: list of tuples that contain actions to perform and their timestamp\r\n    '''\r\n    actions = []\r\n    with open(file_path, 'r') as file:\r\n        for line in file:\r\n            if line.strip():\r\n                parts = line.split(':')\r\n                timestamp = float(parts[0].strip())\r\n                action = parts[1].strip().split()[0]\r\n                actions.append((timestamp, action))\r\n    return actions\r\n\r\n# Update car state based on action\r\ndef update_car_state(action):\r\n    '''\r\n    :param action: string which represents the action to be taken\r\n    :return: boolean which represents goal has been reached. true means goal reached, while false means it hasn't reached its goal yet\r\n    '''\r\n    global velocity, acceleration\r\n    if action == \"accelerate\":\r\n        acceleration = 0.5  # lower acceleration for slower movement\r\n    elif action == \"decelerate\":\r\n        acceleration = -0.5  # lower deceleration\r\n    elif action == \"stop\":\r\n        velocity = 0\r\n        acceleration = 0\r\n        return True  # signal that the stop action has been reached, therefore car needs to be stopped\r\n    return False\r\n\r\n# Function to draw the velocity graph on the side of the Pygame window\r\n# Function to draw the velocity graph with labels and ticks\r\ndef draw_velocity_graph(window, velocity_data):\r\n    '''\r\n    Draws a velocity graph on the side of the main Pygame window.\r\n    :param window: The Pygame window to draw on\r\n    :param velocity_data: List of velocity values over time\r\n    '''\r\n    graph_width = 300  # Graph dimensions\r\n    graph_height = 300\r\n    margin = 50\r\n    max_velocity = max(max(velocity_data, default=0), 1)  # Avoid division by zero\r\n\r\n    # Calculate position for the graph\r\n    graph_x = width - graph_width - margin\r\n    graph_y = margin\r\n\r\n    # Draw graph background and borders\r\n    pygame.draw.rect(window, WHITE, (graph_x, graph_y, graph_width, graph_height))\r\n    pygame.draw.rect(window, BLACK, (graph_x, graph_y, graph_width, graph_height), 5)\r\n\r\n    # Plot the velocity points\r\n    for i in range(1, len(velocity_data)):\r\n        x1 = graph_x + (i - 1) * (graph_width / len(velocity_data))\r\n        y1 = graph_y + graph_height - (velocity_data[i - 1] / max_velocity) * (graph_height - 20)\r\n        x2 = graph_x + i * (graph_width / len(velocity_data))\r\n        y2 = graph_y + graph_height - (velocity_data[i] / max_velocity) * (graph_height - 20)\r\n        pygame.draw.line(window, BLUE, (x1, y1), (x2, y2), 2)\r\n\r\n    # Draw static axes\r\n    pygame.draw.line(window, BLACK, (graph_x, graph_y + graph_height),\r\n                     (graph_x + graph_width, graph_y + graph_height), 2)  # X-axis\r\n    pygame.draw.line(window, BLACK, (graph_x, graph_y),\r\n                     (graph_x, graph_y + graph_height), 2)  # Y-axis\r\n\r\n    # Draw labels for axes\r\n    font = pygame.font.Font(None, 20)\r\n    velocity_label = font.render('Velocity', True, BLACK)\r\n    window.blit(velocity_label, (graph_x + 5, graph_y + 5))\r\n    time_label = font.render('Time', True, BLACK)\r\n    window.blit(time_label, (graph_x + graph_width // 2 - time_label.get_width() // 2, graph_y + graph_height + 10))\r\n\r\n    # Draw Y-axis ticks and labels for velocity\r\n    tick_count = 5  # Number of tick marks\r\n    for i in range(tick_count + 1):\r\n        tick_value = max_velocity * i / tick_count\r\n        y = graph_y + graph_height - (tick_value / max_velocity) * (graph_height - 20)\r\n        pygame.draw.line(window, BLACK, (graph_x - 5, y), (graph_x + 5, y), 2)\r\n        tick_label = font.render(f\"{int(tick_value)}\", True, BLACK)\r\n        window.blit(tick_label, (graph_x - 30, y - tick_label.get_height() // 2))\r\n\r\n    # Draw X-axis ticks and labels for time\r\n    for i in range(0, len(velocity_data), max(1, len(velocity_data) // tick_count)):\r\n        x = graph_x + i * (graph_width / len(velocity_data))\r\n        pygame.draw.line(window, BLACK, (x, graph_y + graph_height - 5), (x, graph_y + graph_height + 5), 2)\r\n        tick_label = font.render(f\"{i}\", True, BLACK)\r\n        window.blit(tick_label, (x - tick_label.get_width() // 2, graph_y + graph_height + 15))\r\n\r\n# Function to draw the road on which the car drives\r\ndef draw_road(window):\r\n    '''\r\n    :param window: window for the road to be drawn in\r\n    :return: draws the road in the window\r\n    '''\r\n    # Draw road\r\n    road_width = width - 400  # Leave space for the graph\r\n    road_height = 100  # Adjusted height for the road\r\n    road_y = height // 2 - road_height // 2  # Center the road vertically\r\n\r\n    # Draw the road\r\n    pygame.draw.rect(window, GRAY, (0, road_y, road_width, road_height))  # Road\r\n\r\n    # Draw center line\r\n    for i in range(0, road_width, 40):\r\n        pygame.draw.line(window, YELLOW, (i, road_y + road_height // 2),\r\n                         (i + 20, road_y + road_height // 2), 5)  # Dotted center line\r\n\r\n# Function to display information\r\ndef display_information(window, car_x, velocity, start_time):\r\n    '''\r\n    :param window: PyGame window to draw in\r\n    :param car_x: location of car on axis\r\n    :param velocity: velocity of the car\r\n    :param start_time: time pygame window started running\r\n    :return:\r\n    '''\r\n    # Define fonts\r\n    title_font = pygame.font.Font(None, 40)  # Font for title\r\n    info_font = pygame.font.Font(None, 30)   # Font for distance, velocity, and time\r\n\r\n    # Get window width for centering text\r\n    window_width = window.get_width()\r\n\r\n    # Title\r\n    title_text = title_font.render('Car Information', True, (0, 0, 0))\r\n    title_rect = title_text.get_rect(center=(window_width // 2, 35))\r\n    window.blit(title_text, title_rect.topleft)\r\n\r\n    # Distance\r\n    distance_text = info_font.render(f'Distance: {int(car_x)}', True, (0, 0, 0))\r\n    distance_rect = distance_text.get_rect(center=(window_width // 2, 70))\r\n    window.blit(distance_text, distance_rect.topleft)\r\n\r\n    # Velocity\r\n    velocity_text = info_font.render(f'Velocity: {round(velocity, 2)}', True, (0, 0, 0))\r\n    velocity_rect = velocity_text.get_rect(center=(window_width // 2, 100))\r\n    window.blit(velocity_text, velocity_rect.topleft)\r\n\r\n    # Time\r\n    current_time = time.time()  # Get the current time\r\n    elapsed_time = current_time - start_time  # Calculate elapsed time in seconds\r\n    time_text = info_font.render(f'Time: {round(elapsed_time, 2)}s', True, (0, 0, 0))\r\n    time_rect = time_text.get_rect(center=(window_width // 2, 130))\r\n    window.blit(time_text, time_rect.topleft)\r\n\r\n# Main function for visualization\r\ndef run_simulation(actions):\r\n    '''\r\n    :param actions: list of tuples containing actions and timestamp\r\n    :return: runs the simulation and draws all in window of pygame\r\n    '''\r\n    global velocity, car_x, acceleration\r\n    current_action_index = 0\r\n    start_time = time.time()\r\n\r\n    # For storing velocity over time\r\n    velocity_data = []\r\n\r\n    running = True\r\n    while running:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                running = False\r\n\r\n        # Fill the background\r\n        window.fill(WHITE)\r\n\r\n        # Draw the road\r\n        draw_road(window)\r\n\r\n        # Update time and get next action if due\r\n        current_time = time.time() - start_time\r\n        velocity_data.append(velocity)  # Capture current velocity\r\n\r\n        if current_action_index < len(actions):\r\n            action_time, action = actions[current_action_index]\r\n            if current_time >= action_time:\r\n                # If the stop action is encountered, end the simulation\r\n                if update_car_state(action):\r\n                    running = False\r\n                current_action_index += 1\r\n\r\n        # Update velocity and position only if running\r\n        velocity += acceleration\r\n        if velocity < 0:\r\n            velocity = 0\r\n\r\n        # Scale the car's position update to slow down movement\r\n        car_x += velocity * 0.01  # Adjust this scaling factor to control speed\r\n\r\n        # Draw car\r\n        window.blit(car_image, (car_x, car_y))\r\n\r\n        # Display car information\r\n        display_information(window, car_x, velocity, start_time)\r\n\r\n        # Draw the velocity graph\r\n        draw_velocity_graph(window, velocity_data)\r\n\r\n        # Update display\r\n        pygame.display.update()\r\n        clock.tick(60)\r\n\r\n    time.sleep(10)\r\n    pygame.quit()\r\n    sys.exit()\r\n\r\nif __name__ == \"__main__\":\r\n    ### TO BE CHANGED: needs to write code that will able performing simulation on given problem using command line\r\n    actions_file = 'ex/car/plans/plan1_pb02.pddl'\r\n    actions = read_actions_from_file(actions_file)\r\n    run_simulation(actions)\r\n
===================================================================
diff --git a/car_visualization.py b/car_visualization.py
--- a/car_visualization.py	
+++ b/car_visualization.py	
@@ -66,7 +66,6 @@
     return False
 
 # Function to draw the velocity graph on the side of the Pygame window
-# Function to draw the velocity graph with labels and ticks
 def draw_velocity_graph(window, velocity_data):
     '''
     Draws a velocity graph on the side of the main Pygame window.
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"95c355c7-89af-429d-a148-399c54dae7c0\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/nyx_visualization.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/nyx_visualization.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"sleeping_beauty_vis\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2mYZonwQr0v2H9E7Em21MymNjsI\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"Python.Unnamed.executor\": \"Run\",\r\n    \"Python.nyx.executor\": \"Run\",\r\n    \"Python.nyx_visualization.executor\": \"Run\",\r\n    \"Python.sleepbeaut.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"git-widget-placeholder\": \"car__vis\",\r\n    \"last_opened_file_path\": \"C:/Users/Lior/Desktop/Nyx/nyx-extension\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\"Python.car_visualization\">\r\n    <configuration default=\"true\" type=\"PythonConfigurationType\" factoryName=\"Python\">\r\n      <module name=\"nyx-extension\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"car_visualization\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"nyx-extension\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"SDK_NAME\" value=\"Python 3.9\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"C:\\Users\\Lior\\Desktop\\Nyx\\nyx-extension\\car_visualization.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"nyx\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"nyx-extension\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/nyx.py\" />\r\n      <option name=\"PARAMETERS\" value=\"ex/sleeping_beauty/sleepingbeauty.pddl ex/sleeping_beauty/pb01.pddl -t:1\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"Tox\" factoryName=\"Tox\">\r\n      <module name=\"nyx-extension\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"docs\" factoryName=\"Docutils task\">\r\n      <module name=\"nyx-extension\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"docutils_input_file\" value=\"\" />\r\n      <option name=\"docutils_output_file\" value=\"\" />\r\n      <option name=\"docutils_params\" value=\"\" />\r\n      <option name=\"docutils_task\" value=\"\" />\r\n      <option name=\"docutils_open_in_browser\" value=\"false\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"docs\" factoryName=\"Sphinx task\">\r\n      <module name=\"nyx-extension\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"docutils_input_file\" value=\"\" />\r\n      <option name=\"docutils_output_file\" value=\"\" />\r\n      <option name=\"docutils_params\" value=\"\" />\r\n      <option name=\"docutils_task\" value=\"\" />\r\n      <option name=\"docutils_open_in_browser\" value=\"false\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"tests\" factoryName=\"Autodetect\">\r\n      <module name=\"nyx-extension\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PATH&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"tests\" factoryName=\"Doctests\">\r\n      <module name=\"nyx-extension\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"\" />\r\n      <option name=\"CLASS_NAME\" value=\"\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"FOLDER_NAME\" value=\"\" />\r\n      <option name=\"TEST_TYPE\" value=\"TEST_SCRIPT\" />\r\n      <option name=\"PATTERN\" value=\"\" />\r\n      <option name=\"USE_PATTERN\" value=\"false\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.car_visualization\" />\r\n        <item itemvalue=\"Python.nyx\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-09665e90c3a7-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.15026.15\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"95c355c7-89af-429d-a148-399c54dae7c0\" name=\"Changes\" comment=\"\" />\r\n      <created>1727255648974</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1727255648974</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -6,7 +6,7 @@
   <component name="ChangeListManager">
     <list default="true" id="95c355c7-89af-429d-a148-399c54dae7c0" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/nyx_visualization.py" beforeDir="false" afterPath="$PROJECT_DIR$/nyx_visualization.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/car_visualization.py" beforeDir="false" afterPath="$PROJECT_DIR$/car_visualization.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -43,6 +43,7 @@
   "keyToString": {
     "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
     "Python.Unnamed.executor": "Run",
+    "Python.car_visualization.executor": "Run",
     "Python.nyx.executor": "Run",
     "Python.nyx_visualization.executor": "Run",
     "Python.sleepbeaut.executor": "Run",
